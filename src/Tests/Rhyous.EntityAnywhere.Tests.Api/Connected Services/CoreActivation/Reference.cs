//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rhyous.EntityAnywhere.AutomatedTests.CoreActivation {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://svc.landesk.com/entitlementservice/", ConfigurationName="CoreActivation.ActivationServiceContract")]
    public interface ActivationServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://svc.landesk.com/entitlementservice/ActivationServiceContract/ActivateLice" +
            "nseRequest", ReplyAction="https://svc.landesk.com/entitlementservice/ActivationServiceContract/ActivateLice" +
            "nseResponse")]
        string ActivateLicense(string UserName, string Password, string MachineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://svc.landesk.com/entitlementservice/ActivationServiceContract/ActivateLice" +
            "nseRequest", ReplyAction="https://svc.landesk.com/entitlementservice/ActivationServiceContract/ActivateLice" +
            "nseResponse")]
        System.Threading.Tasks.Task<string> ActivateLicenseAsync(string UserName, string Password, string MachineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://svc.landesk.com/entitlementservice/ActivationServiceContract/GetAuthoriza" +
            "tionInformationRequest", ReplyAction="https://svc.landesk.com/entitlementservice/ActivationServiceContract/GetAuthoriza" +
            "tionInformationResponse")]
        string GetAuthorizationInformation(string UserName, string Password, System.DateTime UpdateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://svc.landesk.com/entitlementservice/ActivationServiceContract/GetAuthoriza" +
            "tionInformationRequest", ReplyAction="https://svc.landesk.com/entitlementservice/ActivationServiceContract/GetAuthoriza" +
            "tionInformationResponse")]
        System.Threading.Tasks.Task<string> GetAuthorizationInformationAsync(string UserName, string Password, System.DateTime UpdateDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ActivationServiceContractChannel : Rhyous.EntityAnywhere.AutomatedTests.CoreActivation.ActivationServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivationServiceContractClient : System.ServiceModel.ClientBase<Rhyous.EntityAnywhere.AutomatedTests.CoreActivation.ActivationServiceContract>, Rhyous.EntityAnywhere.AutomatedTests.CoreActivation.ActivationServiceContract {
        
        public ActivationServiceContractClient() {
        }
        
        public ActivationServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivationServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ActivateLicense(string UserName, string Password, string MachineId) {
            return base.Channel.ActivateLicense(UserName, Password, MachineId);
        }
        
        public System.Threading.Tasks.Task<string> ActivateLicenseAsync(string UserName, string Password, string MachineId) {
            return base.Channel.ActivateLicenseAsync(UserName, Password, MachineId);
        }
        
        public string GetAuthorizationInformation(string UserName, string Password, System.DateTime UpdateDate) {
            return base.Channel.GetAuthorizationInformation(UserName, Password, UpdateDate);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthorizationInformationAsync(string UserName, string Password, System.DateTime UpdateDate) {
            return base.Channel.GetAuthorizationInformationAsync(UserName, Password, UpdateDate);
        }
    }
}
